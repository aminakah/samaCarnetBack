import { BaseSeeder } from '@adonisjs/lucid/seeders'
import VaccineSchedule from '#models/vaccine_schedule'
import { DateTime } from 'luxon'
import { v4 as uuidv4 } from 'uuid'

export default class VaccineSchedulesSeeder extends BaseSeeder {
  async run() {
    console.log('  üìÖ Seeding vaccine schedules...')
    
    // Check if required data exists
    const vaccineTypes = await import('#models/vaccine_type').then(m => m.default.query().select('id'))
    const patients = await import('#models/patient').then(m => m.default.query().select('id'))
    const users = await import('#models/user').then(m => m.default.query().select('id'))
    
    if (vaccineTypes.length === 0 || patients.length === 0 || users.length === 0) {
      console.log('‚ö†Ô∏è  Skipping vaccine schedules - missing required data')
      return
    }
    
    const schedules = [
      // Calendrier VAT pour A√Øcha Ndiaye (Grossesse)
      {
        tenantId: 1,
        patientId: 1, // A√Øcha Ndiaye
        vaccineTypeId: 1, // VAT (T√©tanos Maternel)
        assignedProviderId: 1, // Fatou Ba (sage-femme)
        scheduledDate: DateTime.now().plus({ days: 7 }),
        dueDate: DateTime.now().plus({ days: 14 }),
        doseNumber: 1,
        isBooster: false,
        status: 'scheduled' as const,
        priority: 'high' as const,
        notes: 'Premi√®re dose VAT pendant la grossesse √† 20 SA. Patiente inform√©e de l\'importance.',
        nextReminderDate: DateTime.now().plus({ days: 5 }),
        reminderSent: false,
        reminderCount: 0,
        autoGenerated: false,
        canCoAdminister: true,
        isMandatory: true,
        syncId: uuidv4(),
        version: 1,
        createdBy: 1,
        isSynced: false
      },
      {
        tenantId: 1,
        patientId: 1, // A√Øcha Ndiaye
        vaccineTypeId: 1, // VAT
        assignedProviderId: 1, // Fatou Ba
        scheduledDate: DateTime.now().plus({ weeks: 5 }),
        dueDate: DateTime.now().plus({ weeks: 5, days: 7 }),
        doseNumber: 2,
        isBooster: false,
        status: 'scheduled' as const,
        priority: 'high' as const,
        notes: 'Deuxi√®me dose VAT (4 semaines apr√®s la premi√®re) √† 24 SA. Compl√©ter protection maternelle et n√©onatale.',
        nextReminderDate: DateTime.now().plus({ weeks: 4, days: 5 }),
        reminderSent: false,
        reminderCount: 0,
        autoGenerated: false,
        canCoAdminister: true,
        isMandatory: true,
        syncId: uuidv4(),
        version: 1,
        createdBy: 1,
        isSynced: false
      },

      // Calendrier VAT pour Khadija Thiam (compl√©t√©)
      {
        tenantId: 1,
        patientId: 1, // Khadija Thiam
        vaccineTypeId: 1, // VAT
        assignedProviderId: 1, // Fatou Ba
        scheduledDate: DateTime.now().minus({ weeks: 8 }),
        dueDate: DateTime.now().minus({ weeks: 8 }).plus({ days: 7 }),
        doseNumber: 1,
        isBooster: false,
        status: 'completed' as const,
        priority: 'high' as const,
        notes: 'Premi√®re dose VAT administr√©e √† 24 SA. Patiente bien inform√©e.',
        nextReminderDate: DateTime.now().minus({ weeks: 8, days: 2 }),
        reminderSent: false,
        reminderCount: 0,
        autoGenerated: false,
        canCoAdminister: true,
        isMandatory: true,
        syncId: uuidv4(),
        version: 1,
        createdBy: 1,
        isSynced: true
      },
      {
        tenantId: 1,
        patientId: 1, // Khadija Thiam
        vaccineTypeId: 1, // VAT
        assignedProviderId: 1, // Fatou Ba
        scheduledDate: DateTime.now().minus({ weeks: 4 }),
        dueDate: DateTime.now().minus({ weeks: 4 }).plus({ days: 7 }),
        doseNumber: 2,
        isBooster: false,
        status: 'completed' as const,
        priority: 'high' as const,
        notes: 'Deuxi√®me dose VAT administr√©e √† 28 SA. Protection compl√®te acquise.',
        nextReminderDate: DateTime.now().minus({ weeks: 4, days: 2 }),
        reminderSent: false,
        reminderCount: 0,
        autoGenerated: false,
        canCoAdminister: true,
        isMandatory: true,
        syncId: uuidv4(),
        version: 1,
        createdBy: 1,
        isSynced: true
      },

      // Calendrier vaccination enfant (exemple futur - enfant de Khadija)
      {
        tenantId: 1,
        patientId: 1, // Future m√®re
        vaccineTypeId: 1, // BCG 
        assignedProviderId: 1, // Fatou Ba
        scheduledDate: DateTime.now().plus({ weeks: 8, days: 3 }), // 3 jours apr√®s DPA
        dueDate: DateTime.now().plus({ weeks: 8, days: 10 }),
        doseNumber: 1,
        isBooster: false,
        status: 'scheduled' as const,
        priority: 'high' as const,
        notes: 'BCG √† la naissance pour le futur nouveau-n√©. √Ä programmer apr√®s accouchement.',
        nextReminderDate: DateTime.now().plus({ weeks: 8 }),
        reminderSent: false,
        reminderCount: 0,
        autoGenerated: false,
        canCoAdminister: true,
        isMandatory: true,
        syncId: uuidv4(),
        version: 1,
        createdBy: 1,
        isSynced: false
      },
      {
        tenantId: 1,
        patientId: 1, // Future m√®re
        vaccineTypeId: 2, // Pentavalent
        assignedProviderId: 1, // Fatou Ba
        scheduledDate: DateTime.now().plus({ weeks: 14 }), // 6 semaines apr√®s naissance
        dueDate: DateTime.now().plus({ weeks: 14, days: 7 }),
        doseNumber: 1,
        isBooster: false,
        status: 'scheduled' as const,
        priority: 'normal' as const,
        notes: 'Premi√®re dose Pentavalent √† 6 semaines pour le futur nouveau-n√©.',
        nextReminderDate: DateTime.now().plus({ weeks: 13 }),
        reminderSent: false,
        reminderCount: 0,
        autoGenerated: false,
        canCoAdminister: true,
        isMandatory: true,
        syncId: uuidv4(),
        version: 1,
        createdBy: 1,
        isSynced: false
      },

      // Tenant 2 - Clinique Almadies
      {
        tenantId: 2,
        patientId: 7, // Patient Almadies
        vaccineTypeId: 1, // VAT
        assignedProviderId: 7, // Mariama Sy
        scheduledDate: DateTime.now().plus({ weeks: 12 }),
        dueDate: DateTime.now().plus({ weeks: 12, days: 7 }),
        doseNumber: 1,
        isBooster: false,
        status: 'scheduled' as const,
        priority: 'normal' as const,
        notes: 'Premi√®re dose VAT programm√©e pour 24 SA',
        nextReminderDate: DateTime.now().plus({ weeks: 11 }),
        reminderSent: false,
        reminderCount: 0,
        autoGenerated: false,
        canCoAdminister: true,
        isMandatory: true,
        syncId: uuidv4(),
        version: 1,
        createdBy: 7,
        isSynced: false
      },

      // Tenant 4 - Demo
      {
        tenantId: 4,
        patientId: 12, // Patiente Demo
        vaccineTypeId: 1, // VAT
        assignedProviderId: 11, // Sage-femme Demo
        scheduledDate: DateTime.now().plus({ weeks: 8 }),
        dueDate: DateTime.now().plus({ weeks: 8, days: 7 }),
        doseNumber: 1,
        isBooster: false,
        status: 'scheduled' as const,
        priority: 'high' as const,
        notes: 'Premi√®re dose VAT - Calendrier de d√©monstration',
        nextReminderDate: DateTime.now().plus({ weeks: 7 }),
        reminderSent: false,
        reminderCount: 0,
        autoGenerated: false,
        canCoAdminister: true,
        isMandatory: true,
        syncId: uuidv4(),
        version: 1,
        createdBy: 11,
        isSynced: false
      },
      {
        tenantId: 4,
        patientId: 12, // Patiente Demo
        vaccineTypeId: 1, // VAT
        assignedProviderId: 11, // Sage-femme Demo
        scheduledDate: DateTime.now().plus({ weeks: 12 }),
        dueDate: DateTime.now().plus({ weeks: 12, days: 7 }),
        doseNumber: 2,
        isBooster: false,
        status: 'scheduled' as const,
        priority: 'high' as const,
        notes: 'Deuxi√®me dose VAT - Calendrier de d√©monstration',
        nextReminderDate: DateTime.now().plus({ weeks: 11 }),
        reminderSent: false,
        reminderCount: 0,
        autoGenerated: false,
        canCoAdminister: true,
        isMandatory: true,
        syncId: uuidv4(),
        version: 1,
        createdBy: 11,
        isSynced: false
      },

      // Exemples de vaccinations enfants (calendrier PEV S√©n√©gal)
      {
        tenantId: 1,
        patientId: 1, // Futur enfant d'A√Øcha
        vaccineTypeId: 1, // BCG
        assignedProviderId: 1, // Fatou Ba
        scheduledDate: DateTime.now().plus({ weeks: 20, days: 1 }), // 1 jour apr√®s DPA
        dueDate: DateTime.now().plus({ weeks: 20, days: 8 }),
        doseNumber: 1,
        isBooster: false,
        status: 'scheduled' as const,
        priority: 'urgent',
        notes: 'BCG √† administrer dans les 24-48h apr√®s naissance',
        nextReminderDate: DateTime.now().plus({ weeks: 20 }),
        reminderSent: false,
        reminderCount: 0,
        autoGenerated: false,
        canCoAdminister: true,
        isMandatory: true,
        syncId: uuidv4(),
        version: 1,
        createdBy: 1,
        isSynced: false
      },
      {
        tenantId: 1,
        patientId: 1, // Futur enfant d'A√Øcha
        vaccineTypeId: 2, // Pentavalent
        assignedProviderId: 1, // Fatou Ba
        scheduledDate: DateTime.now().plus({ weeks: 26 }), // 6 semaines apr√®s naissance
        dueDate: DateTime.now().plus({ weeks: 26, days: 7 }),
        doseNumber: 1,
        isBooster: false,
        status: 'scheduled' as const,
        priority: 'high' as const,
        notes: 'Premi√®re dose Pentavalent selon calendrier PEV √† 6 semaines',
        nextReminderDate: DateTime.now().plus({ weeks: 25 }),
        reminderSent: false,
        reminderCount: 0,
        autoGenerated: false,
        canCoAdminister: true,
        isMandatory: true,
        syncId: uuidv4(),
        version: 1,
        createdBy: 1,
        isSynced: false
      }
    ]

    await VaccineSchedule.createMany(schedules)
  }
}